# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH

global:
  ldap:
    auth:
      admin:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            password: "ldap-admin-password"

nubusLdapServer: &nubusLdapServer
  ldapServer:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          password: "ldap-admin-password"

nubusPortalServer:
  portalServer:
    centralNavigation:
      auth:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            shared_secret: "portal-shared-secret"


nubusProvisioning:
# Since in the example deployment we combine using external NATS and external secrets,
# we don't need to set the environment variables for the NATS passwords here.
# These are only needed if NATS is bundled.
#  nats:
#    extraEnvVars:
#      - name: NATS_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: nats-external-secret
#            key: nats-password
#      - name: NATS_PROVISIONING_API_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: nats-external-secret
#            key: nats-provisioning-password
#      - name: NATS_DISPATCHER_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: nats-external-secret
#            key: nats-dispatcher-password
#      - name: NATS_UDM_TRANSFORMER_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: nats-external-secret
#            key: nats-udm-transformer-password
#      - name: NATS_PREFILL_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: nats-external-secret
#            key: nats-prefill-password
#      - name: NATS_UDM_LISTENER_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: nats-external-secret
#            key: nats-udm-listener-password
  api:
    nats:
      auth:
        existingSecret:
          name: nats-external-secret
          keyMapping:
            password: nats-provisioning-password
    auth:
      admin:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            password: "provisioning-admin-password"
      eventsUdm:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            password: "events-udm-password"
      prefill:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            password: "prefill-api-password"
  dispatcher:
    nats:
      auth:
        existingSecret:
          name: nats-external-secret
          keyMapping:
            password: nats-dispatcher-password
  prefill:
    nats:
      auth:
        existingSecret:
          name: nats-external-secret
          keyMapping:
            password: nats-prefill-password
  registerConsumers:
    createUsers:
      portalConsumer:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            password: "portal-consumer-password"
            registration: "portal-consumer-registration"
      selfserviceConsumer:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            password: "selfservice-consumer-password"
            registration: "selfservice-consumer-registration"
  udmTransformer:
    nats:
      auth:
        existingSecret:
          name: nats-external-secret
          keyMapping:
            password: nats-udm-transformer-password

nubusUdmListener:
  nats:
    auth:
      existingSecret:
        name: nats-external-secret
        keyMapping:
          password: nats-udm-listener-password

keycloak:
  keycloak:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          adminPassword: "keycloak-admin-password"

nubusKeycloakBootstrap:
# TODO: This should contain the the readonly ldap password which is configured by stackdata in LDAP.
#       But stackdata does support existing secrets for this yet.
#  ldap:
#    auth:
#      existingSecret:
#        name: "nubus-existing-secrets"
#        keyMapping:
#          password: "xxx"
  keycloak:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          adminPassword: "keycloak-admin-password"

nubusTwofaHelpdesk:
  keycloak:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          adminPassword: "keycloak-admin-password"

nubusGuardian:
  managementApi:
    oauth:
      auth:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            clientSecret: "oauth-client-secret"
  provisioning:
    keycloak:
      auth:
        existingSecret:
          name: "nubus-existing-secrets"
          keyMapping:
            adminPassword: "keycloak-admin-password"

nubusKeycloakExtensions:
  keycloak:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          adminPassword: "keycloak-extensions-admin-password"
  smtp:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          password: "smtp-auth-password"

nubusPortalConsumer:
  provisioningApi:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          password: "portal-consumer-password"

nubusSelfServiceConsumer:
  provisioningApi:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          password: "selfservice-consumer-password"

nubusUmcServer:
  memcached:
    auth:
      existingPasswordSecret: "nubus-existing-secrets"
      existingSecret:
        name: "nubus-existing-secrets"

  smtp:
    auth:
      existingSecret:
        name: "nubus-existing-secrets"
        keyMapping:
          password: "smtp-auth-password"
