# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024-2025 Univention GmbH

---
include:
  - project: "univention/dev/nubus-for-k8s/common-ci"
    ref: "v1.44.6"
    file:
      - "defaults/nubus-workflow.yaml"
      - "defaults/stages.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/package-and-publish-helm-charts-external.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/harbor-malware-scan.yaml"
      - "templates/sonarqube.yaml"
  - project: 'univention/infrastructure/renovate-runner'
    file: '/templates/renovate.gitlab-ci.yml'

variables:
  SKIP_UPDATE_HELM_VALUES: "1"
  AUTO_TRIGGER_TESTS:
    description: |
      Deployment and e2e test run will be triggered automatically if this is set
      to "yes".
    value: "no"
    options:
      - "yes"
      - "no"
  DEPLOY_NAMESPACE:
    description: "The namespace to deploy into."
    value: "ci-${CI_COMMIT_REF_SLUG}"
  DEPLOY_SUBDOMAIN:
    description: "The subdomain to prepend during the deployment."
    value: "${CI_COMMIT_REF_SLUG}"
  TESTRUNNER_VERSION:
    description: |
      Allows to specify a custom tag to use for the e2e-tests testrunner image.
      Intended to help with testing a branch of the e2e-tests repository.
    # TODO: Change this back to "latest" once the changes have been merged
    value: "latest"
  TESTRUNNER_CONFIGURATION_BRANCH:
    description: |
      Allows to specify a custom branch name to use for the testrunner configuration.
      This branch is used to run the script "discover-env-from-cluster.sh".
    # TODO: Change this back to "main" once the changes have been merged
    value: "main"

renovate:
  stage: "package"
  variables:
    LOG_LEVEL: debug
    RENOVATE_CONFIG_FILE: renovate.yaml
  before_script:
    - curl -O https://get.helm.sh/helm-v3.14.3-linux-amd64.tar.gz
    - sha256sum -c $HELM_SHA256_SUM
    - tar -zxvf helm-v3.14.3-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin/helm
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_TASK == "renovate"'
      when: always
    - when: never

lint-render-manifests:
  stage: lint
  needs:
    - pre-semantic-release
    - publish-chart-external
  image: "ghcr.io/helmfile/helmfile:v0.167.1\
          @sha256:414cb074a0da0f457129590c39d96575fbdcdb7ce75bf0d2b30f05e835947d76"
  script:
    # Prepare
    - export CHART_VERSION=${RELEASE_VERSION}

    # Render manifests with CI configuration
    - pushd ci
    - helmfile template --output-dir ../manifests -l name=nubus
    - popd
  artifacts:
    name: rendered-manifests
    expire_in: 1 week
    expose_as: Rendered Kubernetes Manifests
    paths:
      - manifests/

lint-kubeconform:
  stage: lint
  needs:
    - lint-render-manifests
  image:
    name: ghcr.io/yannh/kubeconform:latest-alpine
    entrypoint: [""]
  script:
    - /kubeconform -strict -ignore-missing-schemas -summary -output junit manifests/ > kubeconform-report.xml || true
    - /kubeconform -strict -ignore-missing-schemas -summary -output text manifests/
  artifacts:
    reports:
      junit: kubeconform-report.xml

.base-deploy-and-test:
  stage: deploy
  allow_failure: true
  needs:
    - job: publish-chart-external
      artifacts: false
    - job: pre-semantic-release
      artifacts: true
  trigger:
    include:
      - local: .gitlab-ci/deploy-and-test.yaml
    forward:
      pipeline_variables: true
    strategy: depend
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never

deploy-and-test:
  extends: .base-deploy-and-test
  variables:
    ENVIRONMENT_SUFFIX: ""
  rules:
    - if: '$AUTO_TRIGGER_TESTS == "yes"'
      when: on_success
    - when: manual

deploy-and-test-external-dependencies:
  extends: .base-deploy-and-test
  variables:
    EXTERNAL_DEPENDENCIES: true
    DEPLOY_NAMESPACE: "ci-${CI_COMMIT_REF_SLUG}-ext"
    DEPLOY_SUBDOMAIN: "${CI_COMMIT_REF_SLUG}-ext"
    ENVIRONMENT_SUFFIX: "-ext"
  rules:
    - when: manual

deploy-and-test-provided-secret-values:
  extends: .base-deploy-and-test
  variables:
    PROVIDED_SECRET_VALUES: true
    DEPLOY_NAMESPACE: "ci-${CI_COMMIT_REF_SLUG}-val"
    DEPLOY_SUBDOMAIN: "${CI_COMMIT_REF_SLUG}-val"
    ENVIRONMENT_SUFFIX: "-val"
  rules:
    - when: manual

# Temporarly allow failure when linting commit messages
# until we know why it fails on issue links
lint-commit-messages:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: true

sonarqube:
  extends: .sonarqube
  needs: []
