# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024-2025 Univention GmbH

# Base template for redeploying with a toggle
.toggles:update-deployment:
  stage: test-toggles
  extends: .check-variables
  image: "ghcr.io/helmfile/helmfile:v0.167.1\
          @sha256:414cb074a0da0f457129590c39d96575fbdcdb7ce75bf0d2b30f05e835947d76"
  script:
    # Prepare environment variables
    - export CHART_VERSION=${RELEASE_VERSION}
    - export REVIEW_PREFIX=${DEPLOY_SUBDOMAIN}
    - export MASTER_PASSWORD=${MASTER_PASSWORD}
    # Update deployment with toggle
    - pushd ci
    - >
      helmfile --debug -n "${DEPLOY_NAMESPACE}"
      --state-values-set portal.featureToggles.${TOGGLE_NAME}=${TOGGLE_VALUE}
      sync
    - popd
    - echo "Deployment updated with ${TOGGLE_NAME}=${TOGGLE_VALUE}"
    - echo "Waiting for the redeployment with ${TOGGLE_NAME} toggle to finish"
    - echo "Waiting for pods to be ready after toggle update"
    # Wait for the main deployments to be ready
    - kubectl -n "${DEPLOY_NAMESPACE}" wait --for=condition=available deployment/nubus-portal-server --timeout=10m
    - kubectl -n "${DEPLOY_NAMESPACE}" wait --for=condition=available deployment/nubus-portal-frontend --timeout=10m
    - echo "${TOGGLE_NAME} toggle deployment is ready"
  rules:
    - if: '$EXTERNAL_DEPENDENCIES == "true"'
      when: never
    - if: '$PROVIDED_SECRET_VALUES == "true"'
      when: never
    - when: on_success

# Base template for testing toggles
.toggles:test:
  stage: test-toggles
  extends: .pytest-base
  variables:
    TEST_PATH: "tests/portal/featureToggles/${TOGGLE_NAME}"
    PYTEST_EXPR: 'acceptance_environment'
    JUNIT_XML: "${TOGGLE_NAME}_test_results.xml"
    HTML_REPORT: "${TOGGLE_NAME}_report.html"
  rules:
    - if: '$EXTERNAL_DEPENDENCIES == "true"'
      when: never
    - if: '$PROVIDED_SECRET_VALUES == "true"'
      when: never
    - when: on_success
