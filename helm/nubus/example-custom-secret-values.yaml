# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH

# Needs to be added to the documentation:

# Cannot be changed
nubusLdapServer:
  ldapServer:
    auth:
      password: "nubusLdapServer.ldapServer.auth.password"

# Can probably be changed
nubusPortalServer:
  portalServer:
    centralNavigation:
      auth:
        sharedSecret: "nubusPortalServer.portalServer.centralNavigation.auth.sharedSecret"
  objectStorage:
    auth:
      accessKeyId: "nubusPortalServer.objectStorage.auth.accessKeyId"
      secretAccessKey: "nubusPortalServer.objectStorage.auth.secretAccessKey"
  udm:
    auth:
      password: "nubusStackData.templateContext.svcPortalServerUserPassword"

# Can be changed
nubusProvisioning:
  nats:
    auth:
      adminPassword: "nubusProvisioning.nats.auth.adminPassword"
  api:
    nats:
      auth:
        password: "nubusProvisioning.api.nats.auth.password"
        existingSecret:
          name: null
          keyMapping:
            password: null
    auth:
      admin:
        password: "nubusProvisioning.api.auth.admin.password"
      eventsUdm:
        password: "nubusProvisioning.api.auth.eventsUdm.password"
      prefill:
        password: "nubusProvisioning.api.auth.prefill.password"
  dispatcher:
    nats:
      auth:
        password: "nubusProvisioning.dispatcher.nats.auth.password"
  udmTransformer:
    nats:
      auth:
        password: "nubusProvisioning.udmTransformer.nats.auth.password"
  prefill:
    nats:
      auth:
        password: "nubusProvisioning.prefill.nats.auth.password"

# Cannot be changed
nubusStackDataUms:
  templateContext:
    initialPasswordAdministrator: "nubusStackData.templateContext.initialPasswordAdministrator"
    readonlyUserPassword: "nubusStackData.templateContext.readonlyUserPassword"
    svcPortalServerUserPassword: "nubusStackData.templateContext.svcPortalServerUserPassword"
  nubusUmcServer:
    memcached:
      auth:
        username: "nubusUmcServer.memcached.auth.username"
    postgresql:
      auth:
        username: "nubusumcserverpostgresqlselfserviceauthusername"

keycloak:
  postgresql:
    auth:
      username: "keycloakpostgresqlauthusername"
      password: "keycloakpostgresqlauthpassword"
      # TODO: uncomment when keycloak secrets migration is done
      #existingSecret:
      #  name: null
  keycloak:
    auth:
      password: "keycloak.keycloak.auth.password"
      # TODO: uncomment when keycloak secrets migration is done
      #existingSecret:
      #  name: null

nubusKeycloakExtensions:
  postgresql:
    auth:
      password: "nubuskeycloakextensionspostgresqlauthpassword"
  smtp:
    auth:
      username: "nubusKeycloakExtensions.smtp.auth.username"
  keycloak:
    connection:
      host: ""
    auth:
      password: "keycloak.keycloak.auth.password"
      existingSecret:
        name: null

nubusKeycloakBootstrap:
  oidc:
    rp:
      umcserver:
        password: "nubusKeycloakBootstrap.oidc.rp.umcserver.clientSecret.password"
  ldap:
    auth:
      password: "nubusStackData.templateContext.readonlyUserPassword"
      credentialSecret:
        key: "password"

nubusGuardian:
  postgresql:
    auth:
      password: "nubusguardianpostgresqlauthpassword"
      existingSecret:
        name: null
  managementApi:
    oauth:
      auth:
        password: "nubusGuardian.managementApi.oauth.auth.password"
        existingSecret:
          name: null
  provisioning:
    enabled: true
    keycloak:
      auth:
        password: "keycloak.keycloak.auth.password"
        existingSecret:
          name: null

nubusTwofaHelpdesk: &nubusTwofaHelpdesk
  keycloak:
    auth:
      password: "keycloak.keycloak.auth.password"
      existingSecret:
        name: null

nubusNotificationsApi:
  postgresql:
    auth:
      username: "nubusnotificationsapipostgresqlauthusername"
      password: "nubusNotificationsApipostgresqlauthpassword"
      existingSecret:
        name: null

nubusPortalConsumer:
  provisioningApi:
    auth:
      username: "nubusPortalConsumerprovisioningApiauthusername"
      password: "nubusPortalConsumerprovisioningApiauthpassword"
  objectStorage:
    auth:
      accessKeyId: "nubusPortalConsumer.objectStorage.auth.accessKeyId"
      secretAccessKey: "nubusPortalConsumer.objectStorage.auth.secretAccessKey"

nubusSelfServiceConsumer:
  provisioningApi:
    auth:
      username: "nubusselfserviceconsumerprovisioningapiauthusername"
      password: "nubusSelfServiceConsumer.provisioningApi.auth.password"

nubusUdmListener:
  nats:
    auth:
      password: "nubusUdmListener.nats.auth.password"
      existingSecret:
        name: null
        keyMapping:
          password: null

nubusUmcServer:
  memcached:
    auth:
      username: "nubusUmcServer.memcached.auth.username"
      password: "nubusUmcServer.memcached.auth.password"
      existingSecret:
        name: null
        keyMapping:
          password: null
  postgresql:
    selfservice:
      auth:
        username: "nubusumcserverpostgresqlselfserviceauthusername"
        password: "nubusUmcServerpostgresqlselfServiceauthpassword"
        existingSecret:
          name: null
    authSession:
      auth:
        username: "nubusumcserverpostgresqlauthsessionusername"
        password: "nubusUmcServerpostgresqlauthSessionpassword"
        existingSecret:
          name: null
  smtp:
    auth:
      password: "nubusUmcServer.smtp.auth.password"
  umcServer:
    oidcClient:
      auth:
        password: "nubusKeycloakBootstrap.oidc.rp.umcserver.clientSecret.password"
