# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024-2025 Univention GmbH

# TODO: Move memcached password over to the umc-server chart

{{- if and .Values.nubusUmcServer.enabled (or (not (hasKey .Values.nubusUmcServer "memcached")) (not (hasKey .Values.nubusUmcServer.memcached "bundled")) .Values.nubusUmcServer.memcached.bundled) }}
{{- $nubusMasterPassword := include "nubusTemplates.masterPassword" . -}}
{{- $nubusSecrets := list
  (dict "name" "umc-server-memcached-credentials" "stringData" (dict
      "memcached-password" (coalesce .Values.nubusUmcServer.memcached.auth.password (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "umc-server") | sha1sum) | quote)
  ))
-}}

{{- range $secret := $nubusSecrets }}
---
kind: "Secret"
apiVersion: "v1"
type: {{ .type | default "Opaque" | quote }}
metadata:
  name: {{ printf "%s-%s" $.Release.Name .name | quote }}
  namespace: {{ include "common.names.namespace" $ | quote }}
  labels:
    {{- include "common.labels.standard" $ | nindent 4 }}
    {{- if $.Values.additionalLabels }}
    {{- include "common.tplvalues.render" ( dict "value" $.Values.additionalLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if $.Values.additionalAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.additionalAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
{{- if .data }}
data:
{{- range $k, $v := .data }}
  {{ $k }}: {{ $v | quote }}
{{- end }}
{{- end }}
{{- if .stringData }}
stringData:
{{- range $k, $v := .stringData }}
  {{ $k }}: {{ $v }}
{{- end }}
{{- end }}
...
{{- end }}
{{- end }}
